generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tbadministrador {
  id_administrador Int            @id @default(autoincrement())
  tbhemocentro     tbhemocentro[]
  tbsuporte        tbsuporte[]
  tbusuario        tbusuario[]
}

model tbanunciante {
  id_anunciante       Int         @id @default(autoincrement())
  telefone_anunciante String?     @db.VarChar(255)
  nome_anunciante     String?     @db.VarChar(255)
  id_usuario          Int?
  tbusuario           tbusuario?  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_anunciante")
  tbanuncio           tbanuncio[]
}

model tbanuncio {
  id_anuncio    Int           @id @default(autoincrement())
  id_anunciante Int?          
  tipo_anuncio  String?       @db.VarChar(100)
  tbanunciante  tbanunciante? @relation(fields: [id_anunciante], references: [id_anunciante], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_anunciante")
}

model tbhemocentro {
  id_hemocentro       Int              @id @default(autoincrement())
  nome_hemocentro     String?          @db.VarChar(255)
  telefone_hemocentro String?          @db.VarChar(255)
  endereco_hemocentro String?          @db.VarChar(150)
  id_administrador    Int?
  tbadministrador     tbadministrador? @relation(fields: [id_administrador], references: [id_administrador], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_administrador_hemocentro")
}

model tbpontos {
  id_pontuacao   Int             @id @default(autoincrement())
  n_pontos       Int?
  id_doacao      Int?
  tbregis_doacao tbregis_doacao? @relation(fields: [id_doacao], references: [id_doacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_doacao_pontos")
}

model tbpublicacao {
  id_publicacao Int        @id @default(autoincrement())
  id_usuario    Int?
  data_hora     DateTime?  @db.Timestamp(6)
  tbusuario     tbusuario? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_publicacao")
}

model tbregis_doacao {
  id_doacao          Int        @id @default(autoincrement())
  data_doacao        DateTime?  @db.Date
  id_usuario         Int?
  comprovante_doacao String     @unique     @db.VarChar(255)
  tbpontos           tbpontos[] 
  tbusuario          tbusuario? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_regisdoacao")
}

model tbsuporte {
  n_protocolo      Int              @id @default(autoincrement())
  id_usuario       Int?
  id_administrador Int?
  tbadministrador  tbadministrador? @relation(fields: [id_administrador], references: [id_administrador], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_administrador_suporte")
  tbusuario        tbusuario?       @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_suporte")
}

model tbusuario {
  id_usuario       Int              @id @default(autoincrement())
  endereco_usuario String?          @db.VarChar(150)
  telefone_usuario String?          @db.VarChar(255)
  nome_usuario     String?          @db.VarChar(255)
  cidade_usuario   String?          @db.VarChar(50)
  email_usuario    String?          @db.VarChar(100)
  senha            String?          @db.VarChar(255)
  id_administrador Int?             
  id_usuario_pf    String?          @db.VarChar(255)
  id_usuario_pj    String?          @db.VarChar(255)
  tbanunciante     tbanunciante[]
  tbpublicacao     tbpublicacao[]
  tbregis_doacao   tbregis_doacao[]
  tbsuporte        tbsuporte[]
  
  tbadministrador  tbadministrador? @relation(fields: [id_administrador], references: [id_administrador], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_administrador_usuario")
  tbusuario_pf     tbusuario_pf?    @relation(fields: [id_usuario_pf], references: [cpf], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_pf")
  tbusuario_pj     tbusuario_pj?    @relation(fields: [id_usuario_pj], references: [cnpj], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_pj")
}

model tbusuario_pf {
  cpf            String      @id  @db.VarChar(255)
  data_nasc      DateTime?   @db.Date
  tipo_sanguineo String?     @db.VarChar(5)
  sexo           sexo_enum?
  tbusuario      tbusuario[]
}

model tbusuario_pj {
  cnpj      String        @id @db.VarChar(255)
  tbusuario tbusuario[]
}

enum sexo_enum {
  M
  F
}
